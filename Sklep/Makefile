#############################################################################
# Makefile for building: Sklep
# Generated by qmake (2.01a) (Qt 4.6.2) on: sob. maj 8 15:46:27 2010
# Project:  Sklep.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile Sklep.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -mtune=amdfam10 -pipe -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -mtune=amdfam10 -pipe -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-rpath,/usr/lib64/qt4
LIBS          = $(SUBLIBS)  -L/usr/lib64/qt4 -lQtSql -L/usr/lib64 -L/usr/lib64/mysql -L/usr/lib64/qt4 -lQtGui -L/usr/X11R6/lib -lQtNetwork -lQtCore -lgthread-2.0 -lrt -lglib-2.0 -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		sklep.cpp \
		sprzedawca.cpp \
		zamawiajacy.cpp \
		kierownik.cpp \
		../DBProxy/dbproxy.cpp moc_sklep.cpp \
		moc_sprzedawca.cpp \
		moc_zamawiajacy.cpp \
		moc_kierownik.cpp \
		moc_dbproxy.cpp
OBJECTS       = main.o \
		sklep.o \
		sprzedawca.o \
		zamawiajacy.o \
		kierownik.o \
		dbproxy.o \
		moc_sklep.o \
		moc_sprzedawca.o \
		moc_zamawiajacy.o \
		moc_kierownik.o \
		moc_dbproxy.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Sklep.pro
QMAKE_TARGET  = Sklep
DESTDIR       = 
TARGET        = Sklep

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_sklep.h ui_sprzedawca.h ui_zamawiajacy.h ui_kierownik.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Sklep.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/qt4/libQtSql.prl \
		/usr/lib64/qt4/libQtCore.prl \
		/usr/lib64/qt4/libQtGui.prl \
		/usr/lib64/qt4/libQtNetwork.prl
	$(QMAKE) -unix -o Makefile Sklep.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/qt4/libQtSql.prl:
/usr/lib64/qt4/libQtCore.prl:
/usr/lib64/qt4/libQtGui.prl:
/usr/lib64/qt4/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Sklep.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Sklep1.0.0 || $(MKDIR) .tmp/Sklep1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Sklep1.0.0/ && $(COPY_FILE) --parents sklep.h sprzedawca.h zamawiajacy.h kierownik.h ../DBProxy/dbproxy.h .tmp/Sklep1.0.0/ && $(COPY_FILE) --parents main.cpp sklep.cpp sprzedawca.cpp zamawiajacy.cpp kierownik.cpp ../DBProxy/dbproxy.cpp .tmp/Sklep1.0.0/ && $(COPY_FILE) --parents sklep.ui sprzedawca.ui zamawiajacy.ui kierownik.ui .tmp/Sklep1.0.0/ && (cd `dirname .tmp/Sklep1.0.0` && $(TAR) Sklep1.0.0.tar Sklep1.0.0 && $(COMPRESS) Sklep1.0.0.tar) && $(MOVE) `dirname .tmp/Sklep1.0.0`/Sklep1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Sklep1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_sklep.cpp moc_sprzedawca.cpp moc_zamawiajacy.cpp moc_kierownik.cpp moc_dbproxy.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_sklep.cpp moc_sprzedawca.cpp moc_zamawiajacy.cpp moc_kierownik.cpp moc_dbproxy.cpp
moc_sklep.cpp: sprzedawca.h \
		../DBProxy/dbproxy.h \
		kierownik.h \
		zamawiajacy.h \
		sklep.h
	/usr/bin/moc $(DEFINES) $(INCPATH) sklep.h -o moc_sklep.cpp

moc_sprzedawca.cpp: ../DBProxy/dbproxy.h \
		sprzedawca.h
	/usr/bin/moc $(DEFINES) $(INCPATH) sprzedawca.h -o moc_sprzedawca.cpp

moc_zamawiajacy.cpp: zamawiajacy.h
	/usr/bin/moc $(DEFINES) $(INCPATH) zamawiajacy.h -o moc_zamawiajacy.cpp

moc_kierownik.cpp: kierownik.h
	/usr/bin/moc $(DEFINES) $(INCPATH) kierownik.h -o moc_kierownik.cpp

moc_dbproxy.cpp: ../DBProxy/dbproxy.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../DBProxy/dbproxy.h -o moc_dbproxy.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_sklep.h ui_sprzedawca.h ui_zamawiajacy.h ui_kierownik.h
compiler_uic_clean:
	-$(DEL_FILE) ui_sklep.h ui_sprzedawca.h ui_zamawiajacy.h ui_kierownik.h
ui_sklep.h: sklep.ui
	/usr/bin/uic sklep.ui -o ui_sklep.h

ui_sprzedawca.h: sprzedawca.ui
	/usr/bin/uic sprzedawca.ui -o ui_sprzedawca.h

ui_zamawiajacy.h: zamawiajacy.ui
	/usr/bin/uic zamawiajacy.ui -o ui_zamawiajacy.h

ui_kierownik.h: kierownik.ui
	/usr/bin/uic kierownik.ui -o ui_kierownik.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp sklep.h \
		sprzedawca.h \
		../DBProxy/dbproxy.h \
		kierownik.h \
		zamawiajacy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

sklep.o: sklep.cpp sklep.h \
		sprzedawca.h \
		../DBProxy/dbproxy.h \
		kierownik.h \
		zamawiajacy.h \
		ui_sklep.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sklep.o sklep.cpp

sprzedawca.o: sprzedawca.cpp sprzedawca.h \
		../DBProxy/dbproxy.h \
		ui_sprzedawca.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sprzedawca.o sprzedawca.cpp

zamawiajacy.o: zamawiajacy.cpp zamawiajacy.h \
		ui_zamawiajacy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o zamawiajacy.o zamawiajacy.cpp

kierownik.o: kierownik.cpp kierownik.h \
		ui_kierownik.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o kierownik.o kierownik.cpp

dbproxy.o: ../DBProxy/dbproxy.cpp ../DBProxy/dbproxy.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbproxy.o ../DBProxy/dbproxy.cpp

moc_sklep.o: moc_sklep.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sklep.o moc_sklep.cpp

moc_sprzedawca.o: moc_sprzedawca.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sprzedawca.o moc_sprzedawca.cpp

moc_zamawiajacy.o: moc_zamawiajacy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_zamawiajacy.o moc_zamawiajacy.cpp

moc_kierownik.o: moc_kierownik.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_kierownik.o moc_kierownik.cpp

moc_dbproxy.o: moc_dbproxy.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dbproxy.o moc_dbproxy.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

